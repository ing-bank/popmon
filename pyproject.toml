[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "popmon"
description = "Monitor the stability of a pandas or spark dataset"
keywords = [
    "pandas",
    "spark",
    "data-science",
    "data-analysis",
    "monitoring",
    "statistics",
    "python",
    "jupyter",
    "ipython"
]
readme = "README.rst"
requires-python = ">=3.7"
authors = [{name = "ING Analytics Wholesale Banking", email = "wbaa@ing.com"}]
license = {type = "MIT", file = "LICENSE"}
dependencies = [
    "numpy>=1.18.0",
    "pandas>=0.25.1,<2",
    "scipy>=1.5.2",
    "histogrammar>=1.0.32",
    "phik",
    "jinja2",
    "tqdm",
    "plotly>=5.8.0",
    "joblib>=0.14.0",
    "htmlmin",
    "pydantic",
    "typing_extensions",
    "tomli >= 1.1.0 ; python_version < '3.11'"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "pytest>=4.0.2",
    "pytest-notebook>=0.6.1",
    "jupyter_client>=5.2.3",
    "ipykernel>=5.1.3",
    "pre-commit>=2.9.0"
]
diptest = [
    "diptest"
]

# files to be shipped with the installation, under: popmon/popmon/
# after installation, these can be found with the functions in resources.py
[tool.setuptools.package-data]
popmon = [
    "visualization/templates/*.html",
    "visualization/templates/assets/css/*.css",
    "visualization/templates/assets/js/*.js",
    "test_data/*.csv.gz",
    "test_data/*.json*",
    "notebooks/popmon*tutorial*.ipynb"
]

[project.urls]
repository = "https://github.com/ing-bank/popmon"

[project.scripts]
popmon_run = "popmon.pipeline.amazing_pipeline:run"

[tool.ruff]
target-version = "py37"
line-length = 120
namespace-packages = ["popmon"]
select = ["ALL"]
ignore = [
    # COM812 is incompatible with COM819
    "COM",

    # Not sure if these are helpful
    "EM",
    "FBT",
    "S301",

    # Manual check/fix needed
    "ERA",
    "S101",
    "ANN",
    "TCH",
    "SLF001",
    "PLR2004",
    "BLE001",
    "D",
    "PLR0915",
    "PLR0911",
    "N802",
    "C901",
    "PD901",
    "PLC1901",
    "PLR0912",
    "PLR0913",
    "TRY003",
    "E501",
    "DTZ",

    # Prefer autofix
    "PD011", # .to_numpy() instead of values
    "PD003", # `.isna` is preferred to `.isnull`; functionality is equivalent
    "PT018", # Assertion should be broken down into multiple parts
    "RET504", # Unnecessary variable assignment before `return` statement
    "RET506", # Unnecessary `else` after `raise` statement
    "PTH123", #  `open("foo")` should be replaced by `Path("foo").open()`
    "PTH120", # similar to above
    "RET505", # Unnecessary `else` after `return` statement
    "SIM102", # (when comments are in the statement) Use a single `if` statement instead of nested `if` statements
    "SIM114", # (when comments are in the statement) Combine `if` branches using logical `or` operator
    "PD010", # `.pivot_table` is preferred to `.pivot` or `.unstack`; provides same functionality
    "PD013", # `.melt` is preferred to `.stack`; provides same functionality
    "G004", # Logging statement uses f-string
    "B028", # No explicit `stacklevel` keyword argument found
]

[tool.ruff.per-file-ignores]
# Allow these outside of the package
"{tests,docs,tools}/*" = [
    # Asserts
    "S101",
    # magical constants
    "PLR2004",
    # non-PEP8 naming
    "N",
    "E741",
    # implicit namespaces
    "INP001",
    # broad exceptions
    "PT011",
    # Too many statements
    "PLR0915",
]

# Sphinx config
"docs/source/conf.py" = ["A001", "ARG001"]

# Example
"examples/*" = [
    # Print statement
    "T201",

    # implicit namespaces
    "INP001",
]

# Notebooks & NBQA
"popmon/notebooks/*" = [
    # Imports cannot be checked properly with NBQA
    # (It splits each cell into a .py file)
    "INP001", "E401", "E402", "F401", "I001",

    # Allow print statements
     "T201",

    # Ignore magic value in comparison for now
    "PLR2004",

    # Found useless expression. Either assign it to a variable or remove it.
    "B018",
]

[tool.pytest.ini_options]
markers = ["spark"]

[tool.pytest.ini_options.spark_options]
"spark.executor.id" = "driver"
"spark.app.name" = "PySparkShell"
"spark.executor.instances" = 1
"master" = "local[*]"
"spark.driver.host" = "192.168.1.78"
"spark.sql.catalogImplementation" = "in-memory"

[tool.semantic_release]
version_variable = [
    "popmon/version.py:version",
]
build_command = "pip install build && python -m build"

[tool.setuptools.dynamic]
version = {attr = "popmon.version.version"}
